# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main","dev"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  android-debug:
    runs-on: ubuntu-latest
    env: # Or as an environment variable
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      VITE_PUBLIC_POSTHOG_HOST: ${{ secrets.VITE_PUBLIC_POSTHOG_HOST }}
      VITE_PUBLIC_POSTHOG_KEY: ${{ secrets.VITE_PUBLIC_POSTHOG_KEY }}
    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'main'  # Always checkout the main branch regardless of which branch triggered the workflow

      - name: Use Node.js 22.x
      # Allinea la versione di Node a quella del job di deploy
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: npm i
        
      - name: Add/Sync Android platform (Capacitor)
        run: npx cap add android

      - name: Build debug APK
        run: npm run android:apk

      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2                         # default
          verbose: false                     # default
          arch: x64                        # allowed values: amd64, x86, x64, arm, arm64
      - name: Check credentials are present (no secrets printed)
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.TEBI_S3_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.TEBI_S3_SECRET_ACCESS_KEY }}
        run: |
            set -euo pipefail
            echo "${{ secrets.TEBI_S3_ACCESS_KEY_ID }}"          
            test -n "${{ secrets.TEBI_S3_ACCESS_KEY_ID }}" || (echo "Missing AWS_ACCESS_KEY_ID (TEBI_S3_ACCESS_KEY_ID secret)" && exit 1)
            test -n "${AWS_SECRET_ACCESS_KEY:-}" || (echo "Missing AWS_SECRET_ACCESS_KEY (TEBI_S3_SECRET_ACCESS_KEY secret)" && exit 1)
            echo "Credentials present."
      - name: Upload APKs to Tebi (S3-compatible)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEBI_S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEBI_S3_SECRET_ACCESS_KEY }}
        run: |
          set -euo pipefail
          echo "Uploading APKs to s3://waifubriscola/build/"
          aws s3 cp android "s3://waifubriscola/build/" \
            --recursive \
            --exclude "*" \
            --include "*.apk" \
            --endpoint-url "https://s3.tebi.io/" \
            --acl public-read \
            --content-type "application/vnd.android.package-archive"

  # Single deploy job since we're just deploying
  deploy:
    runs-on: ubuntu-latest
    env: # Or as an environment variable
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      VITE_PUBLIC_POSTHOG_HOST: ${{ secrets.VITE_PUBLIC_POSTHOG_HOST }}
      VITE_PUBLIC_POSTHOG_KEY: ${{ secrets.VITE_PUBLIC_POSTHOG_KEY }}
    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'main'  # Always checkout the main branch regardless of which branch triggered the workflow
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          # Remove the cache option to avoid the lock file error
      - run: npm i
      - run: npm run build --if-present
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
